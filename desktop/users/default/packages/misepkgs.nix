{ pkgs, lib, ... }:
let
  withLatest = tools: lib.genAttrs tools (_: "latest");
in
{
  programs.mise = {
    enable = true;
    tools = {
      npx = withLatest [
        "@anthropic-ai/claude-code"
        "ccusage"
      ];
      uvx = withLatest [
        "datasette"
        "httpie"
        "isort"
        "llm"
        "mypy"
        "pyp"
        "pyright"
        "pz"
        "reloader.py"
        "virtualenv"
        "visidata"
      ];
      core = withLatest [
        "1password-cli"
        "act"
        "age"
        "age-plugin-yubikey"
        "air"
        "ansible-core"
        "argo"
        "argocd"
        "ast-grep"
        "aws-iam-authenticator"
        "aws-vault"
        "bat"
        "black"
        "buf"
        "caddy"
        "certstrap"
        "cfssl"
        "cheat"
        "choose"
        "cilium-cli"
        "cloudflared"
        "cockroach"
        "consul"
        "curlie"
        "dasel"
        "deno"
        "difftastic"
        "doggo"
        "dotnet"
        "duckdb"
        "duf"
        "dust"
        "dyff"
        "eksctl"
        "fd"
        "ffmpeg"
        "flyctl"
        "fx"
        "gh"
        "go"
        "golangci-lint"
        "gron"
        "grpcurl"
        "gum"
        "helm"
        "helmfile"
        "hexyl"
        "hyperfine"
        "infracost"
        "istioctl"
        "jc"
        "jless"
        "jq"
        "just"
        "k3d"
        "k6"
        "k9s"
        "kind"
        "kn"
        "krew"
        "kube-linter"
        "kubeconform"
        "kubectl"
        "kubectx"
        "kubent"
        "kubergrunt"
        "kubeshark"
        "kubie"
        "kustomize"
        "lazydocker"
        "lazygit"
        "lima"
        "localstack"
        "lua"
        "minikube"
        "node"
        "openbao"
        "opentofu"
        "packer"
        "pandoc"
        "peco"
        "pipx"
        "poetry"
        "pre-commit"
        "protobuf"
        "python"
        "redis"
        "ripgrep"
        "ruby"
        "ruff"
        "rust"
        "sd"
        "skaffold"
        "sqlite"
        "stern"
        "talosctl"
        "terraform"
        "terraformer"
        "terragrunt"
        "uv"
        "vault"
        "vcluster"
        "xh"
        "yarn"
        "yq"
        "zellij"
      ];
    };
    # for reshim
    enableFishIntegration = false;
  };

  programs = {
    fish.interactiveShellInit = ''
      ${lib.getExe pkgs.mise} activate fish --shims | source
    '';
  };
}
